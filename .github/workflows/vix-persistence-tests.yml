name: VIX Data Persistence Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/renderer/components/market-breadth/**'
      - 'src/__tests__/**'
      - 'test/e2e/**'
      - 'src/types/trading.ts'
      - 'src/services/breadth-score-calculator.ts'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/renderer/components/market-breadth/**'
      - 'src/__tests__/**'
      - 'test/e2e/**'
      - 'src/types/trading.ts'
      - 'src/services/breadth-score-calculator.ts'
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - e2e

env:
  NODE_VERSION: '20'
  ELECTRON_CACHE: ~/.cache/electron
  ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder

jobs:
  # Job 1: Unit Tests for VIX Data Storage
  unit-tests:
    name: VIX Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build TypeScript (Main Process)
        run: npm run build:main

      - name: Run VIX Unit Tests
        run: |
          npm run test -- src/__tests__/vix-data-storage.unit.test.ts --reporter=verbose --run
        env:
          CI: true

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: |
            test-results/
            coverage/
          retention-days: 7

  # Job 2: Integration Tests for Market Breadth Form
  integration-tests:
    name: VIX Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build TypeScript (Main Process)
        run: npm run build:main

      - name: Run Market Breadth Integration Tests
        run: |
          npm run test -- src/__tests__/market-breadth-integration.test.tsx --reporter=verbose --run
        env:
          CI: true

      - name: Run Existing VIX Integration Tests
        run: |
          npm run test -- src/renderer/components/market-breadth/__tests__/VixIntegration.test.tsx --reporter=verbose --run
        env:
          CI: true

      - name: Upload Integration Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            test-results/
            coverage/
          retention-days: 7

  # Job 3: End-to-End Tests with Playwright
  e2e-tests:
    name: VIX E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Build Application
        run: |
          npm run build:main
          npm run build:renderer

      - name: Start Application in Background
        run: |
          npm run dev &
          echo $! > dev-server.pid
          sleep 30  # Wait for app to start
        env:
          CI: true

      - name: Wait for Application to be Ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

      - name: Run VIX E2E Tests
        run: |
          npm run test -- test/e2e/vix-data-persistence.e2e.test.ts --reporter=verbose --run
        env:
          CI: true
          HEADLESS: true

      - name: Stop Application
        if: always()
        run: |
          if [ -f dev-server.pid ]; then
            kill $(cat dev-server.pid) || true
            rm dev-server.pid
          fi

      - name: Upload E2E Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            test-results/
            test-results/**/*.png
            test-results/**/*.webm
          retention-days: 7

  # Job 4: Comprehensive Test Suite
  comprehensive-tests:
    name: Comprehensive VIX Test Suite
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]
    timeout-minutes: 45
    if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == ''

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Make Test Script Executable
        run: chmod +x scripts/run-vix-persistence-tests.sh

      - name: Run Comprehensive VIX Test Suite
        run: |
          ./scripts/run-vix-persistence-tests.sh --all --ci
        env:
          CI: true
          HEADLESS: true
          VIX_TEST_BROWSER: chromium

      - name: Upload Comprehensive Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: comprehensive-test-report
          path: |
            test-results/vix-persistence-test-report.md
            test-results/vix-persistence-tests.log
            test-results/
          retention-days: 30

  # Job 5: Test Results Summary
  test-summary:
    name: Test Results Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]
    if: always()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download All Test Results
        uses: actions/download-artifact@v4
        with:
          path: test-artifacts

      - name: Generate Test Summary
        run: |
          echo "# VIX Data Persistence Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow:** ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "**Run ID:** ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check job statuses
          echo "## Test Job Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.unit-tests.result }}" = "success" ]; then
            echo "- ‚úÖ **Unit Tests:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ‚ùå **Unit Tests:** FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.integration-tests.result }}" = "success" ]; then
            echo "- ‚úÖ **Integration Tests:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ‚ùå **Integration Tests:** FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.e2e-tests.result }}" = "success" ]; then
            echo "- ‚úÖ **E2E Tests:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ‚ùå **E2E Tests:** FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## VIX Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This test suite validates:" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ VIX data entry and form validation" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ VIX data storage and database persistence" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ VIX data retrieval and form pre-filling" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ VIX integration with Position Calculator" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ **CRITICAL:** VIX data persistence after app reload" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Files" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- \`test/e2e/vix-data-persistence.e2e.test.ts\` - E2E persistence tests" >> $GITHUB_STEP_SUMMARY
          echo "- \`src/__tests__/vix-data-storage.unit.test.ts\` - Unit tests" >> $GITHUB_STEP_SUMMARY
          echo "- \`src/__tests__/market-breadth-integration.test.tsx\` - Integration tests" >> $GITHUB_STEP_SUMMARY
          echo "- \`src/renderer/components/market-breadth/__tests__/VixIntegration.test.tsx\` - Existing VIX tests" >> $GITHUB_STEP_SUMMARY

      - name: Check Overall Test Status
        run: |
          if [ "${{ needs.unit-tests.result }}" = "success" ] && 
             [ "${{ needs.integration-tests.result }}" = "success" ] && 
             [ "${{ needs.e2e-tests.result }}" = "success" ]; then
            echo "üéâ All VIX data persistence tests passed!"
            exit 0
          else
            echo "‚ö†Ô∏è Some VIX data persistence tests failed. Please check the job logs."
            exit 1
          fi

  # Job 6: Performance and Load Testing (Optional)
  performance-tests:
    name: VIX Performance Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 20

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: |
          npm run build:main
          npm run build:renderer

      - name: Run VIX Performance Tests
        run: |
          # Simulate bulk VIX data entry
          echo "Performance testing VIX data persistence with bulk operations..."
          # This would include tests for:
          # - Multiple VIX entries in quick succession
          # - VIX data with large datasets
          # - Memory usage during VIX operations
          echo "Performance tests completed (placeholder)"

      - name: Upload Performance Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-test-results
          path: test-results/
          retention-days: 14